@page "/event/{Id:int}"
@using System.Text.Json
@using System.Net
@using APForums.Client.Data.Storage
@using System.IdentityModel.Tokens.Jwt
@using APForums.Client.Data
@using APForums.Client.Data.DTO
@using APForums.Client.Data.Structures
@using APForums.Client.Data.Interfaces
@using APForums.Client.Data.DTO.PagesDTO
@using APForums.Client.Pages.Profile
@inject NavigationManager NavManager
@inject IEventService _eventService;


@if(eventResponse == null)
{
    <h1>Loading Event Information...</h1>
}
else
{
    <div class="bg-gradient-to-b from-primary/5 from-1% via-white via-50% to-primary/5 to-99% rounded-lg shadow-lg py-4 px-8">
        <div class="mt-6 mb-4 flex flex-col justify-center items-center">
            @if(eventResponse.Data.Event.ImagePath != null)
            {
                <img class="w-2/3 h-96 border-2 border-solid border-secondary rounded-2xl" src="@eventResponse.Data.Event.ImagePath" />
            }
            <h1 class="mt-3 text-md md:text-xl lg:text-xl xl:text-2xl font-serif text-primary font-bold">@eventResponse.Data.Event.Title</h1>
            @if(eventResponse.Data.Event.ClubId != null)
            {
                <a href="/club/@eventResponse.Data.Event.ClubId"><h2 class="text-xs md:text-sm lg:text-md xl:text-lg text-secondary font-semibold">@eventResponse.Data.Event.ClubName</h2></a>
            }
            @if (!eventResponse.Data.IsInterested)
            {
                <button class="mt-2 px-2 md:px-3 py-1 bg-primary text-primarytext font-medium rounded-2xl" @onclick="HandleAddInterest" disabled="@InterestButtonPressed">Show Interest</button>
            }
            else
            {
                <button class="mt-2 px-2 md:px-3 py-1 bg-primary text-primarytext font-medium rounded-2xl" @onclick="HandleRemoveInterest" disabled="@InterestButtonPressed">Interested <i class="fa-solid fa-check fa-xs md:fa-sm"></i></button>
            }
            <hr class="my-3 border-2 border-solid border-secondary/80 w-full">
            <h3 class="mt-3 text-sm md:text-base lg:text-lg xl:text-xl text-primary font-medium">@eventResponse.Data.Event.SubTitle</h3>
            <h3 class="p-2 mt-3 text-sm md:text-base lg:text-lg xl:text-xl">@eventResponse.Data.Event.Description</h3>
            <div class="flex flex-wrap">
                <p class="mx-2">Start Date: <span class="text-secondary font-medium">@eventResponse.Data.Event.GetStartDate()</span></p>
                <p class="mx-2">End Date: <span class="text-secondary font-medium">@eventResponse.Data.Event.GetEndDate()</span></p>
            </div>
            <hr class="mt-5 border-2 border-solid border-secondary/80 w-full">
            <h3 class="mt-6 text-sm md:text-base lg:text-lg xl:text-xl text-primary font-medium">Interested Users: 
                <span class="text-secondary">
                    @usersResponse.Data.Count()
                </span>
            </h3>
            <div class="mt-4 p-2 flex flex-col md:flex-row items-center md:flex-wrap">
                @foreach(var user in usersResponse.Data)
                {
                    <BasicUserCard User="user"/>   
                }
                @if (usersResponse.Data.Count() == 0)
                {
                    <p class="text-primary text-sm md:text-base lg:text-lg font-medium">No one is interested in this event so far, <button class="text-secondary" @onclick="HandleAddInterest">be the first!</button></p>
                }
                @if (usersResponse.Status != HttpStatusCode.OK)
                {
                    <p class="text-primary text-sm md:text-base lg:text-lg font-medium">Unable to load interested users for this event!</p>
                }
            </div>
        </div>
    </div>
}


@code {

    [Parameter]
    public int Id { get; set; }

    public BasicHttpResponseWithData<EventWithInterest> eventResponse = null;

    public BasicHttpResponseWithData<IEnumerable<BasicUser>> usersResponse = null;

    public bool InterestButtonPressed = false;



    protected override async Task OnInitializedAsync()
    {
        eventResponse = await _eventService.GetSingleEventWithInterest(Id);
        if (eventResponse.Status != HttpStatusCode.OK)
        {
            await App.Current.MainPage.DisplayAlert("Whoopsie!", eventResponse.Error, "Ok");
            NavManager.NavigateTo("/home");
        }
        await FetchInterestedUsers();
    }

    private async Task FetchInterestedUsers()
    {
        usersResponse = await _eventService.GetEventInterestedUsers(Id);
        if (usersResponse.Status == HttpStatusCode.OK)
        {
            usersResponse.Data = usersResponse.Data.OrderBy(u => u.Name).ToList();
        }
    }

    private async Task HandleAddInterest()
    {
        InterestButtonPressed = true;
        var interestResponse = await _eventService.AddEventInterest(Id);
        if (interestResponse.Status == HttpStatusCode.OK)
        {
            await App.Current.MainPage.DisplayAlert("Success!", "You have become interested in this event!", "Ok");
            eventResponse.Data.IsInterested = true;
            await FetchInterestedUsers();

        } else if (interestResponse.Status == HttpStatusCode.InternalServerError)
        {
            await App.Current.MainPage.DisplayAlert("Whoopsie!", "You are already interested in this event!", "Ok");
        } else
        {
            await App.Current.MainPage.DisplayAlert("Whoopsie!", "Unable to process your request!", "Ok");
        }
        InterestButtonPressed = false;
    }

    private async Task HandleRemoveInterest()
    {
        InterestButtonPressed = true;
        var interestResponse = await _eventService.RemoveEventInterest(Id);
        if (interestResponse.Status == HttpStatusCode.OK)
        {
            await App.Current.MainPage.DisplayAlert("Success!", "You are no longer interested in this event!", "Ok");
            eventResponse.Data.IsInterested = false;
            await FetchInterestedUsers();
        }
        else if (interestResponse.Status == HttpStatusCode.InternalServerError)
        {
            await App.Current.MainPage.DisplayAlert("Whoopsie!", "You are not interested in this event!", "Ok");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Whoopsie!", "Unable to process your request!", "Ok");
        }
        InterestButtonPressed = false;
    }
}
